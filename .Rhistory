names(statemeans)[names(statemeans) == "n"] <- "count"
statemeans %>% ggplot(aes(x = abbr, fill = IBUmean)) + geom_bar(aes(fill=abbr), width = 0.5) + ggtitle("Number of Restaurants in Baltimore by Council Disctrict Number")
p<-ggplot(data=statemeans, aes(x=abbr, y=IBUmean)) +
geom_bar(aes(fill=abbr),stat="identity")
p
p<-ggplot(data=statemeans, aes(x=abbr, y=ABVmean)) +
geom_bar(aes(fill=abbr),stat="identity")
p
<!-- g <- ggplot(statemeans, aes(x = "abbr")) -->
<!-- g + geom_bar(aes(fill=abbr), width = 0.5) +  -->
<!--   theme(axis.text.x = element_text(angle=65, vjust=0.6)) + -->
<!--   labs(title="Breweries by State",  -->
<!--        subtitle="Mean ABV and Mean IBU by State") -->
ABV <- c('ABV')
IBU <- c('IBU')
State <- c('State')
maxABV <- data.frame(ABV, State)
maxIBU <- data.frame(IBU, State)
maxABV$ABV = max(statemeans$ABVmean)
maxIBU$IBU = max(statemeans$IBUmean)
maxABV$State = droplevels(statemeans[grep(max(statemeans$ABVmean), statemeans$ABVmean),]$vars)
maxIBU$State = droplevels(statemeans[grep(max(statemeans$IBUmean), statemeans$IBUmean),]$vars)
gg <- ggplot(nona, aes(x=ABV, y=IBU)) +
geom_point(aes(col=State)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 0.15)) +
ylim(c(0, 150)) +
labs(subtitle="ABV vs IBU",
y="IBU",
x="ABV",
title="Scatterplot",
caption = "Source: Brewery Data")
plot(gg)
temp = statepop
str_trim(temp$abbr)
statesum$vars = as.character(statesum$vars)
statesum$vars = str_trim(statesum$vars)
statebrew = merge(statesum, temp, by.x = "vars", by.y = "abbr")
names(statebrew)[names(statebrew) == "vars"] <- "abbr"
names(statebrew)[names(statebrew) == "n"] <- "count"
statebrew$per_cap <- statebrew$pop_2015 / statebrew$count
plot_usmap(data = statebrew, values = "count", color = "red") +
scale_fill_continuous(name = "Beers by State", label = scales::comma) +
theme(legend.position = "right")
plot_usmap(data = allbrews, values = "IBU", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "IBU by State"  ) + theme(legend.position = "right")
nona$State = as.character(nona$State)
nona$State = str_trim(nona$State)
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
plot_usmap(data = allbrews, values = "IBU", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "IBU by State"  ) + theme(legend.position = "right")
library(class)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(data.table)
library(mice)
library(ggalt)
library(usmap)
statemeans %>% ggplot(aes(x = abbr, fill = IBUmean)) + geom_bar(aes(fill=abbr), width = 0.5) + ggtitle("Number of Restaurants in Baltimore by Council Disctrict Number")
p<-ggplot(data=statemeans, aes(x=abbr, y=IBUmean)) +
geom_bar(aes(fill=abbr),stat="identity")
p
gg <- ggplot(nona, aes(x=ABV, y=IBU)) +
geom_point(aes(col=State)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 0.15)) +
ylim(c(0, 150)) +
labs(subtitle="ABV vs IBU",
y="IBU",
x="ABV",
title="Scatterplot",
caption = "Source: Brewery Data")
plot(gg)
styles = c("IPA", "ale", "lager", "stout", "cider", "porter", "pilsner", "beer")
i=1
grep(styles[i,], allbrews$Beer_Name)> 0
beers = data.frame(styles)
View(beers)
grep(beers[i,], allbrews$Beer_Name)> 0
beers[i,]
allbrews$Beer_Name
allbrews$style = ""
j=1
allbrews[i,]$Beer_Name
beers[j,]
grep(beers[j,],allbrews[i,]$Beer_Name > 0
grep(beers[j,],allbrews[i,]$Beer_Name > 0)
grep(beers[j,],allbrews[i,]$Beer_Name > 0)
grep(beers[j,],allbrews[i,]$Beer_Name > 0)
str(allbrews)
str(beers)
allbrews$Beer_Name = as.character(allbrews$Beer_Name)
beers = as.character(beers)
grep(beers[j,],allbrews[i,]$Beer_Name > 0)
beers[j,]
styles = c("IPA", "ale", "lager", "stout", "cider", "porter", "pilsner", "beer")
beers = data.frame(styles)
grep(beers[j,],allbrews[i,]$Beer_Name > 0)
beers[j,]
allbrews[i,]$Beer_Name
beers = as.character(beers)
grep(beers[j,],allbrews[i,]$Beer_Name > 0)
beers$ = as.character(beers$)
styles = c("IPA", "ale", "lager", "stout", "cider", "porter", "pilsner", "beer")
beers = data.frame(styles)
beers$styles = as.character(beers$styles)
grep(beers[j,]$styles,allbrews[i,]$Beer_Name > 0)
beers$styles = as.character(beers$styles)
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
styles = c("IPA", "ale", "lager", "stout", "cider", "porter", "pilsner", "beer")
beers = data.frame(styles)
grep(beers[j,]$styles,allbrews[i,]$Beer_Name > 0)
allbrews$style = ""
allbrews$Beer_Name = as.character(allbrews$Beer_Name)
beers$styles = as.character(beers$styles)
grep(beers[j,]$styles,allbrews[i,]$Beer_Name > 0)
library(class)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(data.table)
library(mice)
library(ggalt)
library(usmap)
nona$State = as.character(nona$State)
nona$State = str_trim(nona$State)
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
# set seed
set.seed(6)
# splitPerc = .75
# Read in csv files
beers = read.csv("~/03-School/DS 6306/Project-1/Project-One/Beers.csv")
breweries = read.csv("~/03-School/DS 6306/Project-1/Project-One/Breweries.csv")
# add new data not on GitHub
combine = merge(beers, breweries, by.x = "Brewery_id", by.y = "Brew_ID")
# change the column names to match the data
names(combine)[names(combine) == "Name.x"] <- "Beer_Name"
names(combine)[names(combine) == "Name.y"] <- "Brewery_Name"
# sum all the beers by state
statesum = count(combine, vars = State)
# find the first 6 and last 6 beers
head(combine)
tail(combine)
# No iteration. But I want to get Predictor-Matrix
init = mice(combine, maxit=0)
predM = init$predictorMatrix
# Do not use following columns to impute values in 'ABV' and 'IBU'. Use the rest.
predM[, c("Beer_Name", "Beer_ID", "Ounces", "Brewery_Name")]=0
imp<-mice(combine, m=5, predictorMatrix = predM)
# Get the final data-frame with imputed values filled in
nona <- complete(imp)
write.csv(nona, file = "~/03-School/DS 6306/Project-1/Project-One/nona.csv")
temp = statepop
statesum$vars = as.character(statesum$vars)
statesum$vars = str_trim(statesum$vars)
statebrew = merge(statesum, temp, by.x = "vars", by.y = "abbr")
names(statebrew)[names(statebrew) == "vars"] <- "abbr"
names(statebrew)[names(statebrew) == "n"] <- "count"
statebrew$per_cap <- statebrew$pop_2015 / statebrew$count
nona$State = as.character(nona$State)
nona$State = str_trim(nona$State)
# merge data to one master data frame
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
# compute the ABV state stats
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
x = statebrew
statebrew = x
stateIBU = merge(allbrews, stateIBU, by.x = "abbr", by.y = "abbr")
stateABV = merge(allbrews, stateABV, by.x = "abbr", by.y = "abbr")
View(stateABV)
View(stateIBU)
names(stateIBU)[names(stateIBU) == "count.x"] <- "count"
plot_usmap(data = allbrews, values = "ABV", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABv, values = "ABV", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "ABV", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
nona = read.csv("~/03-School/DS 6306/Project-1/Project-One/nona.csv")
temp = statepop
statesum$vars = as.character(statesum$vars)
statesum$vars = str_trim(statesum$vars)
statebrew = merge(statesum, temp, by.x = "vars", by.y = "abbr")
names(statebrew)[names(statebrew) == "vars"] <- "abbr"
names(statebrew)[names(statebrew) == "n"] <- "count"
statebrew$per_cap <- statebrew$pop_2015 / statebrew$count
nona$State = as.character(nona$State)
nona$State = str_trim(nona$State)
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
View(allbrews)
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
View(stateABV)
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
plot_usmap(data = stateABV, values = "ABV", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
x = statebrew
statebrew = x
#stateIBU = merge(allbrews, stateIBU, by.x = "abbr", by.y = "abbr")
#stateABV = merge(allbrews, stateABV, by.x = "abbr", by.y = "abbr")
stateIBU = merge(allbrews, stateIBU, by.x = "abbr", by.y = "abbr")
stateABV = merge(allbrews, stateABV, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "ABV", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
str(stateABV)
stateABV = as.data.frame(stateABV)
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
stateABV = as.data.frame(stateABV)
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
View(temp)
stateIBU = merge(temp, stateIBU, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
stateABV = merge(temp, stateABV, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
stateABV = merge(temp, stateABV, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
stateIBU = merge(temp, stateIBU, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateIBU, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "IBU by State"  ) + theme(legend.position = "right")
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
stateIBU = merge(temp, stateIBU, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateIBU, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "IBU by State"  ) + theme(legend.position = "right")
nona = read.csv("~/03-School/DS 6306/Project-1/Project-One/nona.csv")
temp = statepop
statesum$vars = as.character(statesum$vars)
statesum$vars = str_trim(statesum$vars)
statebrew = merge(statesum, temp, by.x = "vars", by.y = "abbr")
names(statebrew)[names(statebrew) == "vars"] <- "abbr"
names(statebrew)[names(statebrew) == "n"] <- "count"
statebrew$per_cap <- statebrew$pop_2015 / statebrew$count
nona$State = as.character(nona$State)
nona$State = str_trim(nona$State)
# merge data to one master data frame
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
# compute the ABV state stats
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
# compute the IBU state stats
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
stateABV = merge(temp, stateABV, by.x = "abbr", by.y = "abbr")
stateIBU = merge(temp, stateIBU, by.x = "abbr", by.y = "abbr")
nona$State = as.character(nona$State)
nona$State = str_trim(nona$State)
# merge data to one master data frame
allbrews = merge(statebrew, nona, by.x = "abbr", by.y = "State")
# compute the ABV state stats
stateABV = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), ABV)
# compute the IBU state stats
stateIBU = allbrews %>%
group_by(abbr) %>%
summarise_each(funs(max, min, mean, median, sd), IBU)
stateABV = merge(temp, stateABV, by.x = "abbr", by.y = "abbr")
stateIBU = merge(temp, stateIBU, by.x = "abbr", by.y = "abbr")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "blue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "darkblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "darkslateblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateIBU, values = "median", color = "red") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") + labs(title = "All 50 States", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") + labs(title = "All 50 States", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") + labs(title = "All 50 States", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "median", color = "red") + labs(title = "Median ABV by all 50 States", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateIBU, values = "median", color = "red") + labs(title = "Median IBU by all 50 States", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateIBU, values = "max", color = "red") + labs(title = "Median IBU by all 50 States", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "max", color = "red") + labs(title = "Median ABV by all 50 States", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "Alcohol by Volume by State"  ) + theme(legend.position = "right")
maxABV = max(stateABV$max)
grep(maxABV, stateABV$max)
stmABV = stateabbr(grep(maxABV, stateABV$max))
stmABV = stateABV$abbr(grep(maxABV, stateABV$max))
grep(maxABV, stateABV$max)
stmABV = stateABV$abbr(lenght(grep(maxABV, stateABV$max)))
stateABV$abbr(lenght(grep(maxABV, stateABV$max)))
maxABV = max(stateABV$max)
max(stateABV$max)
max(stateABV$max)
grep(maxABV, stateABV$max)
length(grep(maxABV, stateABV$max))
plot_usmap(data = stateIBU, values = "max", include = "CO", color = "red") + labs(title = "Median IBU by all 50 States", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "max", include = "CO", color = "red") + labs(title = "Median IBU by all 50 States", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "max", include = "CO", color = "red") + labs(title = "Max ABV by State", subtitle = "This is a map of the State with the highest ABV") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV"  ) + theme(legend.position = "right")
plot_usmap(data = stateIBU, values = "max", include = "CO", color = "red") + labs(title = "Max IBU by State", subtitle = "This is a map of the State with the highest IBU") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU"  ) + theme(legend.position = "right")
plot_usmap(data = stateABV, values = "max", include = "CO", color = "red") + labs(title = "Max ABV by State", subtitle = "This is a map of the State with the highest ABV") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV"  ) + theme(legend.position = "right")
hist(stateIBU$mean, col = "skyblue2")
hist(stateABV$mean, col = "skyblue2")
hist(stateABV$mean, col = "skyblue2") + labs(title = "Histogram of the ABV Means")
hist(stateABV$mean, col = "skyblue2", title = "Histogram of the ABV Means")
hist(stateABV$mean, col = "skyblue2", main = "Histogram of the ABV Means")
hist(stateABV$mean, col = "skyblue2", main = "Histogram of the ABV Means", xlab = "Means")
hist(stateABV$mean, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 10, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 100, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 50, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 30, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 20, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 12, freq=FALSE, col="gray", xlab="Means", main="Histogram of ABV Means")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateABV$mean, breaks = 12, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV Means of States")
curve(dnorm(x, mean=mean(stateABV$mean), sd=sd(stateABV$mean)), add=TRUE, col="red") #line
hist(stateIBU$mean, breaks = 12, freq=FALSE, col="red", xlab="Means", main="Histogram of IBU Means of States")
curve(dnorm(x, mean=mean(stateIBU$mean), sd=sd(stateIBU$mean)), add=TRUE, col="red") #line
hist(stateABV$sd, breaks = 12, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV Means of States")
curve(dnorm(x, mean=mean(stateABV$sd), sd=sd(stateABV$sd)), add=TRUE, col="red")
justABV<-nona%>%select(ABV)
summary(justABV)hist(justABV$ABV,
main="Histogram of Alcohol by Volume of beer population",
xlab="Alcohol by Volume",
ylab="Beer population",
col="blue",
border="black"
)
nona%>%ggplot(aes(x=ABV,fill=State))+geom_histogram(bins=30)+ggtitle("Alcohol by Volume Distribution of Beer population")+xlab("ABV Content")+ylab("Number of Beers")#1 sample t-test of ABV data
logjustABV<-log(justABV)
t.test(x=justABV, conf.int = "TRUE", alternative = "two.sided")
justIBU<-nona%>%select(IBU)
hist(justIBU$IBU,
main="Histogram of International Bitternes Units of beer population",
xlab="International Bitternes Units",
ylab="Beer population",
col="blue",
border="black"
)
nona%>%ggplot(aes(x=IBU,color=State))+geom_histogram(bins=30)+ggtitle("Distribution of Bitterness of Beer population")+xlab("Bitterness")+ylab("Number of Beers")
hist(justIBU$IBU,
main="Histogram of International Bitternes Units of beer population",
xlab="International Bitternes Units",
ylab="Beer population",
col="blue",
border="black"
)
summary(justABV)hist(justABV$ABV,
main="Histogram of Alcohol by Volume of beer population",
xlab="Alcohol by Volume",
ylab="Beer population",
col="blue",
border="black"
)
hist(justABV$ABV,
main="Histogram of Alcohol by Volume of beer population",
xlab="Alcohol by Volume",
ylab="Beer population",
col="blue",
border="black"
)
justABV<-nona%>%select(ABV)
summary(justABV)
summary(stateABV$mean)
hist(allbrews$ABV, breaks = 12, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV Means of States")
curve(dnorm(x, mean=mean(allbrews$ABV), sd=sd(allbrews$ABV)), add=TRUE, col="red")
summary(allbrews$ABV)
hist(allbrews$ABV, breaks = 12, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV of States")
curve(dnorm(x, mean=mean(allbrews$ABV), sd=sd(allbrews$ABV)), add=TRUE, col="red")
hist(allbrews$ABV, breaks = 120, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV of States")
curve(dnorm(x, mean=mean(allbrews$ABV), sd=sd(allbrews$ABV)), add=TRUE, col="red")
hist(allbrews$ABV, breaks = 60, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV of States")
curve(dnorm(x, mean=mean(allbrews$ABV), sd=sd(allbrews$ABV)), add=TRUE, col="red")
hist(allbrews$ABV, breaks = 30, freq=FALSE, col="red", xlab="Means", main="Histogram of ABV of States")
curve(dnorm(x, mean=mean(allbrews$ABV), sd=sd(allbrews$ABV)), add=TRUE, col="red")
plot_usmap(include = .northeast_region, data = stateIBU, values = "median", color = "red") + labs(title = "North East Region", subtitle = "This is a map of the Median IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(include = .northeast_region, data = stateABV, values = "median", color = "red") + labs(title = "North East Region", subtitle = "This is a map of the Median ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV by State"  ) + theme(legend.position = "right")
plot_usmap(include = .north_central_region, data = allbrews, values = "ABV", color = "red") + labs(title = "North central Region", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV by State") + theme(legend.position = "right")
plot_usmap(include = .midwest_region, data = allbrews, values = "ABV", color = "red") + labs(title = "Mid-West Region", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV by State") + theme(legend.position = "right")
plot_usmap(include = .south_region, data = allbrews, values = "ABV", color = "red") + labs(title = "South Region", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV by State") + theme(legend.position = "right")
plot_usmap(include = .west_region, data = allbrews, values = "ABV", color = "red") + labs(title = "West Region", subtitle = "This is a map of the ABV by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "ABV by State") + theme(legend.position = "right")
plot_usmap(include = .northeast_region, data = stateIBU, values = "median", color = "red") + labs(title = "North East Region", subtitle = "This is a map of the Median IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State"  ) + theme(legend.position = "right")
plot_usmap(include = .north_central_region, data = allbrews, values = "IBU", color = "red") + labs(title = "North central Region", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State") + theme(legend.position = "right")
plot_usmap(include = .midwest_region, data = allbrews, values = "IBU", color = "red") + labs(title = "Mid-West Region", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State") + theme(legend.position = "right")
plot_usmap(include = .south_region, data = allbrews, values = "IBU", color = "red") + labs(title = "South Region", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State") + theme(legend.position = "right")
plot_usmap(include = .west_region, data = allbrews, values = "IBU", color = "red") + labs(title = "West Region", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State") + theme(legend.position = "right")
plot_usmap(include = .north_central_region, data = allbrews, values = "IBU", color = "red") + labs(title = "North central Region", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State") + theme(legend.position = "right")
plot_usmap(include = .midwest_region, data = allbrews, values = "IBU", color = "red") + labs(title = "Mid-West Region", subtitle = "This is a map of the IBU by State.") +
scale_fill_continuous(
low = "white", high = "midnightblue", name = "IBU by State") + theme(legend.position = "right")
